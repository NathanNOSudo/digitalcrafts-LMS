[dir=rtl] ul.fancytree-container {
  border: none;
  padding: 0;
  list-style: none;
}
[dir=rtl] ul.fancytree-container:focus {
  outline: none;
}
[dir=rtl] ul.fancytree-container li {
  padding: 0 0 3px;
}
[dir=rtl] ul.fancytree-container li.fancytree-lastsib {
  padding: 0;
}
[dir=rtl] ul.fancytree-container li ul {
  padding-top: 3px;
  list-style: none;
}

[dir=rtl] .fancytree-icon {
  color: #272C33;
}
[dir=rtl] .fancytree-folder .fancytree-icon {
  color: #5567FF;
}

[dir=rtl] .fancytree-expander {
  color: #272C33;
}

[dir=rtl] span.fancytree-node.fancytree-selected {
  background-color: #eeeeee;
  border-color: #eeeeee;
}
[dir=rtl] span.fancytree-node.fancytree-selected span.fancytree-title {
  background-color: transparent;
}

[dir=rtl] span.fancytree-node.fancytree-active {
  background-color: white;
}
[dir=rtl] span.fancytree-node.fancytree-active .fancytree-icon, [dir=rtl] span.fancytree-node.fancytree-active .fancytree-expander {
  color: #272C33;
}

[dir=rtl] .fancytree-container.fancytree-treefocus span.fancytree-node:hover {
  background-color: #eeeeee;
}
[dir=rtl] .fancytree-container.fancytree-treefocus span.fancytree-node:hover .fancytree-icon, [dir=rtl] .fancytree-container.fancytree-treefocus span.fancytree-node:hover .fancytree-expander {
  color: #272C33;
}
[dir=rtl] .fancytree-container.fancytree-treefocus span.fancytree-node:hover.fancytree-folder .fancytree-icon {
  color: #5567FF;
}
[dir=rtl] .fancytree-container.fancytree-treefocus span.fancytree-node.fancytree-focused {
  border-color: #5567FF;
}
[dir=rtl] .fancytree-container.fancytree-treefocus span.fancytree-node.fancytree-selected {
  background-color: #eeeeee;
  border-color: #eeeeee;
}
[dir=rtl] .fancytree-container.fancytree-treefocus span.fancytree-node.fancytree-selected span.fancytree-title {
  background-color: transparent;
}
[dir=rtl] .fancytree-container.fancytree-treefocus span.fancytree-node.fancytree-selected .fancytree-icon, [dir=rtl] .fancytree-container.fancytree-treefocus span.fancytree-node.fancytree-selected .fancytree-expander {
  color: #272C33;
}
[dir=rtl] .fancytree-container.fancytree-treefocus span.fancytree-node.fancytree-selected:hover {
  background-color: #e9e9e9;
}
[dir=rtl] .fancytree-container.fancytree-treefocus span.fancytree-node.fancytree-active {
  background-color: #5567FF;
  border-color: #5567FF;
}
[dir=rtl] .fancytree-container.fancytree-treefocus span.fancytree-node.fancytree-active .fancytree-title, [dir=rtl] .fancytree-container.fancytree-treefocus span.fancytree-node.fancytree-active .fancytree-icon, [dir=rtl] .fancytree-container.fancytree-treefocus span.fancytree-node.fancytree-active .fancytree-expander, [dir=rtl] .fancytree-container.fancytree-treefocus span.fancytree-node.fancytree-active .fancytree-checkbox {
  color: #ffffff;
}
[dir=rtl] .fancytree-container.fancytree-treefocus span.fancytree-node.fancytree-active:hover {
  background-color: #4b5eff;
}
[dir=rtl] .fancytree-container.fancytree-treefocus span.fancytree-node.fancytree-active:hover.fancytree-folder .fancytree-icon {
  color: #ffffff;
}

[dir=rtl] .sidebar-skin-dark ul.fancytree-container {
  background-color: transparent;
}
[dir=rtl] .sidebar-skin-dark span.fancytree-title {
  color: #272C33;
}
[dir=rtl] .sidebar-skin-dark span.fancytree-node.fancytree-active {
  background-color: fade(#5567FF, 30%);
}
[dir=rtl] .sidebar-skin-dark span.fancytree-node.fancytree-active .fancytree-icon, [dir=rtl] .sidebar-skin-dark span.fancytree-node.fancytree-active .fancytree-expander {
  color: #272C33;
}
[dir=rtl] .sidebar-skin-dark .fancytree-container.fancytree-treefocus span.fancytree-node:hover {
  background-color: #eeeeee;
}
[dir=rtl] .sidebar-skin-dark .fancytree-container.fancytree-treefocus span.fancytree-node.fancytree-active:hover {
  background-color: #4b5eff;
}

[dir=rtl] .sidebar span.fancytree-node {
  border-radius: 0;
}
/*# sourceMappingURL=data:application/json;base64, */